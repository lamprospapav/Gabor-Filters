% Solve a Pattern Recognition Problem with a Neural Network
% Script generated by Neural Pattern Recognition app
% Created Fri Dec 12 19:22:06 EET 2014
%
% This script assumes these variables are defined:
%
%   input_train - input data.
%   labels - target data.

tic

x = input_train';
t = labels';
y = input_test';
tt = labels_test';

% Create a Pattern Recognition Network
% hiddenLayerSize = [440 240 120];
hiddenLayerSize = [240 140 80];
% hiddenLayerSize = [200 140];
% hiddenLayerSize = [400];
net = patternnet(hiddenLayerSize);


% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 90/100;
net.divideParam.valRatio = 10/100;
net.divideParam.testRatio = 0/100;


% Train the Network
[net,tr] = train(net,x,t);

toc

% % Test the Network
% y = net(x);
% e = gsubtract(t,y);
% tind = vec2ind(t);
% yind = vec2ind(y);
% percentErrors = sum(tind ~= yind)/numel(tind);
% fprintf('Train_set percent error %f \n',(percentErrors)*100);
% performance = perform(net,t,y);

% View the Network
% view(net)


% Test the Network
test = net(y);
ttind = vec2ind(tt);
ytind = vec2ind(test);
testPercentErrors = sum(ttind ~= ytind)/numel(ttind);
fprintf('Test_set percent error %f \n',(testPercentErrors)*100);
performance = perform(net,tt,test);


% Plots
% Uncomment these lines to enable various plots.
%figure, plotperform(tr)
%figure, plottrainstate(tr)
%figure, plotconfusion(t,y)
%figure, plotroc(t,y)
%figure, ploterrhist(e)

